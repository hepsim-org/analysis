//
// File generated by rootcint at Mon Mar  6 17:23:32 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdILParticle_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "LParticle_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void LParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LParticle(void *p = 0);
   static void *newArray_LParticle(Long_t size, void *p);
   static void delete_LParticle(void *p);
   static void deleteArray_LParticle(void *p);
   static void destruct_LParticle(void *p);
   static void streamer_LParticle(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::LParticle*)
   {
      ::LParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LParticle", ::LParticle::Class_Version(), "./inc/LParticle.h", 14,
                  typeid(::LParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::LParticle::Dictionary, isa_proxy, 0,
                  sizeof(::LParticle) );
      instance.SetNew(&new_LParticle);
      instance.SetNewArray(&newArray_LParticle);
      instance.SetDelete(&delete_LParticle);
      instance.SetDeleteArray(&deleteArray_LParticle);
      instance.SetDestructor(&destruct_LParticle);
      instance.SetStreamerFunc(&streamer_LParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::LParticle*)
   {
      return GenerateInitInstanceLocal((::LParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr LParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LParticle::Class_Name()
{
   return "LParticle";
}

//______________________________________________________________________________
const char *LParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LParticle*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void LParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class LParticle.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_type;
      R__b >> m_status;
      R__b >> m_charge;
      R__b >> m_parent;
      momentum.Streamer(R__b);
      {
         vector<double> &R__stl =  parameters;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<CParticle> &R__stl =  constituents;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            CParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, LParticle::IsA());
   } else {
      R__c = R__b.WriteVersion(LParticle::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_type;
      R__b << m_status;
      R__b << m_charge;
      R__b << m_parent;
      momentum.Streamer(R__b);
      {
         vector<double> &R__stl =  parameters;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<CParticle> &R__stl =  constituents;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<CParticle>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((CParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void LParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LParticle.
      TClass *R__cl = ::LParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_type", &m_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_status", &m_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_charge", &m_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_parent", &m_parent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momentum", &momentum);
      R__insp.InspectMember(momentum, "momentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parameters", (void*)&parameters);
      R__insp.InspectMember("vector<double>", (void*)&parameters, "parameters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "constituents", (void*)&constituents);
      R__insp.InspectMember("vector<CParticle>", (void*)&constituents, "constituents.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_LParticle(void *p) {
      return  p ? new(p) ::LParticle : new ::LParticle;
   }
   static void *newArray_LParticle(Long_t nElements, void *p) {
      return p ? new(p) ::LParticle[nElements] : new ::LParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_LParticle(void *p) {
      delete ((::LParticle*)p);
   }
   static void deleteArray_LParticle(void *p) {
      delete [] ((::LParticle*)p);
   }
   static void destruct_LParticle(void *p) {
      typedef ::LParticle current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_LParticle(TBuffer &buf, void *obj) {
      ((::LParticle*)obj)->::LParticle::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::LParticle

namespace ROOTDict {
   void vectorlECParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECParticlegR_Dictionary();
   static void *new_vectorlECParticlegR(void *p = 0);
   static void *newArray_vectorlECParticlegR(Long_t size, void *p);
   static void delete_vectorlECParticlegR(void *p);
   static void deleteArray_vectorlECParticlegR(void *p);
   static void destruct_vectorlECParticlegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<CParticle>*)
   {
      vector<CParticle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CParticle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CParticle>", -2, "prec_stl/vector", 49,
                  typeid(vector<CParticle>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlECParticlegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CParticle>) );
      instance.SetNew(&new_vectorlECParticlegR);
      instance.SetNewArray(&newArray_vectorlECParticlegR);
      instance.SetDelete(&delete_vectorlECParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlECParticlegR);
      instance.SetDestructor(&destruct_vectorlECParticlegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<CParticle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CParticle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECParticlegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<CParticle>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlECParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CParticle> : new vector<CParticle>;
   }
   static void *newArray_vectorlECParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CParticle>[nElements] : new vector<CParticle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECParticlegR(void *p) {
      delete ((vector<CParticle>*)p);
   }
   static void deleteArray_vectorlECParticlegR(void *p) {
      delete [] ((vector<CParticle>*)p);
   }
   static void destruct_vectorlECParticlegR(void *p) {
      typedef vector<CParticle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<CParticle>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

/********************************************************
* src/LParticle_dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableLParticle_dict();

extern "C" void G__set_cpp_environmentLParticle_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("inc/LParticle.h");
  G__cpp_reset_tagtableLParticle_dict();
}
#include <new>
extern "C" int G__cpp_dllrevLParticle_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* LParticle */
static int G__LParticle_dict_466_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LParticle[n];
     } else {
       p = new((void*) gvp) LParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LParticle;
     } else {
       p = new((void*) gvp) LParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LParticle_dictLN_LParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) LParticle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LParticle_dictLN_LParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LParticle((LParticle*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) LParticle((LParticle*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LParticle_dictLN_LParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LParticle((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) LParticle((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LParticle_dictLN_LParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LParticle*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LParticle*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LParticle*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LParticle*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((LParticle*) G__getstructoffset())->GetP();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LParticle*) G__getstructoffset())->SetCharge((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LParticle*) G__getstructoffset())->SetParent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LParticle*) G__getstructoffset())->SetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LParticle*) G__getstructoffset())->SetStatus((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LParticle*) G__getstructoffset())->SetP(*(TLorentzVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LParticle*) G__getstructoffset())->SetParameter((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LParticle*) G__getstructoffset())->SetConstituent(*((CParticle*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((LParticle*) G__getstructoffset())->GetParameters();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<CParticle>* pobj;
         vector<CParticle> xobj = ((LParticle*) G__getstructoffset())->GetConstituents();
         pobj = new vector<CParticle>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const LParticle*) G__getstructoffset())->operator>(*(LParticle*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LParticle_dict_466_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LParticle_dict_466_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LParticle(*(LParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LParticle_dictLN_LParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LParticle G__TLParticle;
static int G__LParticle_dict_466_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LParticle*) (soff+(sizeof(LParticle)*i)))->~G__TLParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LParticle*) (soff))->~G__TLParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LParticle_dict_466_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LParticle* dest = (LParticle*) G__getstructoffset();
   *dest = *(LParticle*) libp->para[0].ref;
   const LParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* LParticle */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncLParticle_dict {
 public:
  G__Sizep2memfuncLParticle_dict(): p(&G__Sizep2memfuncLParticle_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncLParticle_dict::*p)();
};

size_t G__get_sizep2memfuncLParticle_dict()
{
  G__Sizep2memfuncLParticle_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceLParticle_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LParticle_dictLN_LParticle))) {
     LParticle *G__Lderived;
     G__Lderived=(LParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LParticle_dictLN_LParticle),G__get_linked_tagnum(&G__LParticle_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableLParticle_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LParticle_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LParticle_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LParticle_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LParticle_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__LParticle_dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LParticle_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LParticle_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CParticle>",117,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlECParticlecOallocatorlECParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LParticle_dictLN_reverse_iteratorlEvectorlECParticlecOallocatorlECParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlECParticlecOallocatorlECParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LParticle_dictLN_reverse_iteratorlEvectorlECParticlecOallocatorlECParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlECParticlecOallocatorlECParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* LParticle */
static void G__setup_memvarLParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LParticle_dictLN_LParticle));
   { LParticle *p; p=(LParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_type=",0,"particle type number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_status=",0,"status code");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_charge=",0,"Particle charge");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_parent=",0,"mother");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LParticle_dictLN_TLorentzVector),-1,-1,4,"momentum=",0,"Initial momentum (x,y,z,tot)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"parameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LParticle_dictLN_vectorlECParticlecOallocatorlECParticlegRsPgR),G__defined_typename("vector<CParticle>"),-1,4,"constituents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LParticle_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarLParticle_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncLParticle(void) {
   /* LParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LParticle_dictLN_LParticle));
   G__memfunc_setup("LParticle",896,G__LParticle_dict_466_0_1, 105, G__get_linked_tagnum(&G__LParticle_dictLN_LParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LParticle",896,G__LParticle_dict_466_0_2, 105, G__get_linked_tagnum(&G__LParticle_dictLN_LParticle), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - e "
"i - 'Int_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LParticle",896,G__LParticle_dict_466_0_3, 105, G__get_linked_tagnum(&G__LParticle_dictLN_LParticle), -1, 0, 1, 1, 1, 0, "U 'LParticle' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LParticle",896,G__LParticle_dict_466_0_4, 105, G__get_linked_tagnum(&G__LParticle_dictLN_LParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__LParticle_dict_466_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatus",932,G__LParticle_dict_466_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParent",906,G__LParticle_dict_466_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__LParticle_dict_466_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__LParticle_dict_466_0_9, 117, G__get_linked_tagnum(&G__LParticle_dictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__LParticle_dict_466_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParent",918,G__LParticle_dict_466_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__LParticle_dict_466_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatus",944,G__LParticle_dict_466_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP",380,G__LParticle_dict_466_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__LParticle_dict_466_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConstituent",1484,G__LParticle_dict_466_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'CParticle' - 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameters",1332,G__LParticle_dict_466_0_17, 117, G__get_linked_tagnum(&G__LParticle_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConstituents",1587,G__LParticle_dict_466_0_18, 117, G__get_linked_tagnum(&G__LParticle_dictLN_vectorlECParticlecOallocatorlECParticlegRsPgR), G__defined_typename("vector<CParticle>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__LParticle_dict_466_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "u 'LParticle' - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LParticle_dict_466_0_20, 85, G__get_linked_tagnum(&G__LParticle_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LParticle_dict_466_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LParticle_dict_466_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LParticle_dict_466_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LParticle_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LParticle_dict_466_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LParticle_dict_466_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LParticle_dict_466_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LParticle_dict_466_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LParticle_dict_466_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LParticle", 896, G__LParticle_dict_466_0_32, (int) ('i'), G__get_linked_tagnum(&G__LParticle_dictLN_LParticle), -1, 0, 1, 1, 1, 0, "u 'LParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LParticle", 1022, G__LParticle_dict_466_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LParticle_dict_466_0_34, (int) ('u'), G__get_linked_tagnum(&G__LParticle_dictLN_LParticle), -1, 1, 1, 1, 1, 0, "u 'LParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncLParticle_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalLParticle_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcLParticle_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LParticle_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_CParticle = { "CParticle" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_LParticle = { "LParticle" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_vectorlECParticlecOallocatorlECParticlegRsPgR = { "vector<CParticle,allocator<CParticle> >" , 99 , -1 };
G__linked_taginfo G__LParticle_dictLN_reverse_iteratorlEvectorlECParticlecOallocatorlECParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CParticle,allocator<CParticle> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableLParticle_dict() {
  G__LParticle_dictLN_TClass.tagnum = -1 ;
  G__LParticle_dictLN_TBuffer.tagnum = -1 ;
  G__LParticle_dictLN_TMemberInspector.tagnum = -1 ;
  G__LParticle_dictLN_TObject.tagnum = -1 ;
  G__LParticle_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__LParticle_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__LParticle_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LParticle_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__LParticle_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__LParticle_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__LParticle_dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__LParticle_dictLN_TLorentzVector.tagnum = -1 ;
  G__LParticle_dictLN_CParticle.tagnum = -1 ;
  G__LParticle_dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__LParticle_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LParticle_dictLN_LParticle.tagnum = -1 ;
  G__LParticle_dictLN_vectorlECParticlecOallocatorlECParticlegRsPgR.tagnum = -1 ;
  G__LParticle_dictLN_reverse_iteratorlEvectorlECParticlecOallocatorlECParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableLParticle_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_CParticle);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LParticle_dictLN_LParticle),sizeof(LParticle),-1,62720,"Monte Carlo particle object",G__setup_memvarLParticle,G__setup_memfuncLParticle);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_vectorlECParticlecOallocatorlECParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__LParticle_dictLN_reverse_iteratorlEvectorlECParticlecOallocatorlECParticlegRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupLParticle_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupLParticle_dict()");
  G__set_cpp_environmentLParticle_dict();
  G__cpp_setup_tagtableLParticle_dict();

  G__cpp_setup_inheritanceLParticle_dict();

  G__cpp_setup_typetableLParticle_dict();

  G__cpp_setup_memvarLParticle_dict();

  G__cpp_setup_memfuncLParticle_dict();
  G__cpp_setup_globalLParticle_dict();
  G__cpp_setup_funcLParticle_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncLParticle_dict();
  return;
}
class G__cpp_setup_initLParticle_dict {
  public:
    G__cpp_setup_initLParticle_dict() { G__add_setup_func("LParticle_dict",(G__incsetup)(&G__cpp_setupLParticle_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initLParticle_dict() { G__remove_setup_func("LParticle_dict"); }
};
G__cpp_setup_initLParticle_dict G__cpp_setup_initializerLParticle_dict;

